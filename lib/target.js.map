{"version":3,"sources":["../src/target.js"],"names":["type","Source","initialProps","autoCenter","body","window","document","html","documentElement","height","Math","max","offsetHeight","scrollHeight","clientHeight","style","width","position","left","top","zIndex","Target","state","tid","initialLeft","initialTop","resetOffest","bind","setState","sourceSize","targetSize","props","connectDropTarget","el","Component","Context","HTML5Backend","drop","monitor","component","round","item","getItem","delta","getDifferenceFromInitialOffset","x","y","move","connect","dropTarget"],"mappings":"unCAKe,SAACA,CAAD,CAAOC,CAAP,CAAuD,IAAxCC,EAAwC,wDAAzB,CAAEC,aAAF,CAAyB,CAC9DC,EAAOC,OAAOC,QAAP,CAAgBF,IADuC,CAE9DG,EAAOF,OAAOC,QAAP,CAAgBE,eAFuC,CAG9DC,EAASC,KAAKC,GAAL,CACbP,EAAKQ,YADQ,CAEbR,EAAKS,YAFQ,CAGbN,EAAKO,YAHQ,CAIbP,EAAKK,YAJQ,CAKbL,EAAKM,YALQ,CAHqD,CAW9DE,EAAQ,CACZC,MAAO,MADK,CAEZP,QAFY,CAGZQ,SAAU,OAHE,CAIZC,KAAM,CAJM,CAKZC,IAAK,CALO,CAMZC,OAAQ,GANI,CAXsD,CAuC9DC,CAvC8D,aAwClE,YAAe,kGAEb,GAAKC,KAAL,CAAa,CACXC,IAAQvB,CAAR,KADW,CAEXkB,KAAMhB,EAAasB,WAAb,EAA4B,CAFvB,CAGXL,IAAKjB,EAAauB,UAAb,EAA2B,CAHrB,CAFA,CAOb,EAAKC,WAAL,CAAmB,EAAKA,WAAL,CAAiBC,IAAjB,GAPN,EAQd,CAhDiE,uEAkD5DT,CAlD4D,CAkDtDC,CAlDsD,CAkDjD,CACf,KAAKS,QAAL,CAAc,CAAEV,MAAF,CAAQC,KAAR,CAAd,CACD,CApDiE,sCAsDrDU,CAtDqD,CAsDzC,CACvB,GAAM1B,GAAiD,SAAnC,QAAOD,GAAaC,UAAlC,EAA8DD,EAAaC,UAAjF,CACA,GAAI,MAAJ,CAAyB,CACvB,GAAM2B,GAAa,cAAQ,KAAKR,KAAL,CAAWC,GAAnB,CAAnB,CACAO,EAAWrB,MAAX,CAAoBJ,OAAOC,QAAP,CAAgBF,IAAhB,CAAqBQ,YAArB,EAAqCkB,EAAWrB,MAF7C,CAGvB,KAAKmB,QAAL,CAAc,CACZV,KAAMY,EAAWd,KAAX,CAAmB,CAAnB,CAAuBa,EAAWb,KAAX,CAAmB,CADpC,CAEZG,IAAKW,EAAWrB,MAAX,CAAoB,CAApB,CAAwBoB,EAAWpB,MAAX,CAAoB,CAFrC,CAAd,CAID,CACF,CAhEiE,kCAkExD,OAC0B,KAAKsB,KAD/B,CACAC,CADA,GACAA,iBADA,CACmBC,CADnB,GACmBA,EADnB,GAEc,KAAKX,KAFnB,CAEAJ,CAFA,GAEAA,IAFA,CAEMC,CAFN,GAEMA,GAFN,CAGR,MACEa,IACAA,EACE,+BAAK,GAAI,KAAKV,KAAL,CAAWC,GAApB,CAAyB,MAAOR,CAAhC,EACG,wBAAC,CAAD,EAAQ,GAAIkB,CAAZ,CAAgB,KAAMf,CAAtB,CAA4B,IAAKC,CAAjC,CAAsC,WAAY,KAAKO,WAAvD,EADH,CADF,CAMH,CA7EiE,OAuC/CQ,WAvC+C,EAgF9DC,EAAU,sBAAgBC,SAAhB,EACd,iBAAWpC,CAAX,CA7DW,CACXqC,IADW,YACLN,CADK,CACEO,CADF,CACWC,CADX,CACsB,OAMlB7B,KAAK8B,KANa,CAC/B,GAAKD,CAAL,KAGME,GAAOH,EAAQI,OAAR,EAHb,CAIMC,EAAQL,EAAQM,8BAAR,EAJd,CAKM1B,EAAO,EAAWuB,EAAKvB,IAAL,CAAYyB,EAAME,CAA7B,CALb,CAMM1B,EAAM,EAAWsB,EAAKtB,GAAL,CAAWwB,EAAMG,CAA5B,CANZ,CAOAP,EAAUQ,IAAV,CAAe7B,CAAf,CAAqBC,CAArB,CAPA,CAQD,CAVU,CA6DX,CAhDF,SAAkB6B,CAAlB,CAAoC,CAClC,MAAO,CACLhB,kBAAmBgB,EAAQC,UAAR,EADd,CAGR,CA4CC,EAAgC5B,CAAhC,CADc,CAhFoD,CAoFpE,MAAOc,EACR,C","file":"target.js","sourcesContent":["import React, { Component } from 'react'\nimport HTML5Backend from 'react-dnd-html5-backend'\nimport { DragDropContext, DropTarget } from 'react-dnd'\nimport { getSize } from './utility'\n\nexport default (type, Source, initialProps = { autoCenter: true }) => {\n  const body = window.document.body\n  const html = window.document.documentElement\n  const height = Math.max(\n    body.offsetHeight,\n    body.scrollHeight,\n    html.clientHeight,\n    html.offsetHeight,\n    html.scrollHeight\n  )\n\n  const style = {\n    width: '100%',\n    height,\n    position: 'fixed',\n    left: 0,\n    top: 0,\n    zIndex: 999\n  }\n\n  const spec = {\n    drop (props, monitor, component) {\n      if (!component) {\n        return\n      }\n      const item = monitor.getItem()\n      const delta = monitor.getDifferenceFromInitialOffset()\n      const left = Math.round(item.left + delta.x)\n      const top = Math.round(item.top + delta.y)\n      component.move(left, top)\n    }\n  }\n\n  function collect (connect, monitor) {\n    return {\n      connectDropTarget: connect.dropTarget()\n    }\n  }\n\n  class Target extends Component {\n    constructor () {\n      super()\n      this.state = {\n        tid: `${type}-t`,\n        left: initialProps.initialLeft || 0,\n        top: initialProps.initialTop || 0\n      }\n      this.resetOffest = this.resetOffest.bind(this)\n    }\n\n    move (left, top) {\n      this.setState({ left, top })\n    }\n\n    resetOffest (sourceSize) {\n      const autoCenter = (typeof initialProps.autoCenter === 'boolean') ? initialProps.autoCenter : true\n      if (autoCenter === true) {\n        const targetSize = getSize(this.state.tid)\n        targetSize.height = window.document.body.offsetHeight || targetSize.height\n        this.setState({\n          left: targetSize.width / 2 - sourceSize.width / 2,\n          top: targetSize.height / 2 - sourceSize.height / 2\n        })\n      }\n    }\n\n    render () {\n      const { connectDropTarget, el } = this.props\n      const { left, top } = this.state\n      return (\n        connectDropTarget &&\n        connectDropTarget(\n          <div id={this.state.tid} style={style}>\n            {<Source el={el} left={left} top={top} reportSize={this.resetOffest} />}\n          </div>\n        )\n      )\n    }\n  }\n\n  const Context = DragDropContext(HTML5Backend)(\n    DropTarget(type, spec, collect)(Target)\n  )\n\n  return Context\n}\n"]}