{"version":3,"sources":["../src/source.js"],"names":["type","style","position","cursor","pointerEvents","propTypes","el","PropTypes","element","isRequired","isDragging","bool","connectDragSource","func","Source","props","left","top","t","window","document","getElementById","win","ownerDocument","defaultView","pe","getComputedStyle","opacity","Component","beginDrag","connect","monitor","dragSource"],"mappings":"4oCAIe,SAACA,CAAD,CAAU,IACjBC,GAAQ,CACZC,SAAU,UADE,CAEZC,OAAQ,MAFI,CAGZC,cAAe,MAHH,CADS,CAqBjBC,EAAY,CAChBC,GAAIC,UAAUC,OAAV,CAAkBC,UADN,CAEhBC,WAAYH,UAAUI,IAAV,CAAeF,UAFX,CAGhBG,kBAAmBL,UAAUM,IAAV,CAAeJ,UAHlB,CArBK,CA2BjBK,CA3BiB,0MA4BX,OACiD,KAAKC,KADtD,CACAL,CADA,GACAA,UADA,CACYE,CADZ,GACYA,iBADZ,CAC+BN,CAD/B,GAC+BA,EAD/B,CACmCU,CADnC,GACmCA,IADnC,CACyCC,CADzC,GACyCA,GADzC,CAEFC,EAAIC,OAAOC,QAAP,CAAgBC,cAAhB,CAAkCrB,CAAlC,MAFF,CAGFsB,EAAMJ,EAAEK,aAAF,CAAgBC,WAHpB,CAKFC,EAAKH,EAAII,gBAAJ,CAAqBR,CAArB,CAAwB,IAAxB,mBALH,OAMJR,EANI,EAOK,MAAP,IAPE,GAQJQ,EAAEjB,KAAF,mBAA0B,MARtB,EAUC,IAVD,GAYK,MAAP,IAZE,GAaJiB,EAAEjB,KAAF,mBAA0B,MAbtB,EAgBDW,EACL,+BACE,GAAOZ,CAAP,KADF,CAEE,MAAO,cAAc,CAAEgB,MAAF,CAAQC,KAAR,CAAaU,QAASjB,EAAa,EAAb,CAAmB,CAAzC,CAAd,CAA4DT,CAA5D,CAFT,EAIGK,CAJH,CADK,CAhBC,CAwBT,CApDoB,OA2BFsB,WA3BE,EAwDvB,MADAd,GAAOT,SAAP,CAAmBA,CACnB,CAAO,iBAAWL,CAAX,CAjDM,CACX6B,SADW,YACAd,CADA,CACO,IACRT,EADQ,CACUS,CADV,CACRT,EADQ,CACJU,CADI,CACUD,CADV,CACJC,IADI,CACEC,CADF,CACUF,CADV,CACEE,GADF,CAEhB,MAAO,CAAEX,IAAF,CAAMU,MAAN,CAAYC,KAAZ,CACR,CAJU,CAiDN,CA1CP,SAAkBa,CAAlB,CAA2BC,CAA3B,CAAoC,CAClC,MAAO,CACLnB,kBAAmBkB,EAAQE,UAAR,EADd,CAELtB,WAAYqB,EAAQrB,UAAR,EAFP,CAIR,CAqCM,EAAgCI,CAAhC,CACR,C","file":"source.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { DragSource } from 'react-dnd'\n\nexport default (type) => {\n  const style = {\n    position: 'absolute',\n    cursor: 'move',\n    pointerEvents: 'auto'\n  }\n\n  const spec = {\n    beginDrag (props) {\n      const { el, left, top } = props\n      return { el, left, top }\n    }\n  }\n\n  function collect (connect, monitor) {\n    return {\n      connectDragSource: connect.dragSource(),\n      isDragging: monitor.isDragging()\n    }\n  }\n\n  const propTypes = {\n    el: PropTypes.element.isRequired,\n    isDragging: PropTypes.bool.isRequired,\n    connectDragSource: PropTypes.func.isRequired\n  }\n\n  class Source extends Component {\n    render () {\n      const { isDragging, connectDragSource, el, left, top } = this.props\n      const t = window.document.getElementById(`${type}-t`)\n      const win = t.ownerDocument.defaultView\n      const POINTER_EVENTS = 'pointer-events'\n      const pe = win.getComputedStyle(t, null)[POINTER_EVENTS]\n      if (isDragging) {\n        if (pe !== 'auto') {\n          t.style[POINTER_EVENTS] = 'auto'\n        }\n        return null\n      } else {\n        if (pe !== 'none') {\n          t.style[POINTER_EVENTS] = 'none'\n        }\n      }\n      return connectDragSource(\n        <div\n          id={`${type}-s`}\n          style={Object.assign({ left, top, opacity: isDragging ? 0.5 : 1 }, style)}\n        >\n          {el}\n        </div>\n      )\n    }\n  }\n\n  Source.propTypes = propTypes\n  return DragSource(type, spec, collect)(Source)\n}\n"]}